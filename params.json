{"name":"XML CV","tagline":"CV and Cover Letter XSL template","body":"# Description\r\n\r\nXMLCV is a multilingual XSL template for creation of a simple structured Curriculum Vitae and Colver leter. The output can be either PDF, plain text or XHTML. The user does not need to know anything about the design. Everything is done automatically by XSL template.\r\n\r\n\r\n# Requirements\r\n\r\n* XSLT Processor (Saxon-6.5.x, xsltproc, ...)\r\n* FO Processor (FOP-0.9x, XSL Formatter, ...)\r\n* XML Syntax Validator (xmllint, jing, ...) = optional\r\n\r\n\r\n# Transformation\r\n\r\nBefore you start with transformation, it is recommended (but it is not necessary) to check if the XML source file have right structure:\r\n```\r\n$ xmllint --noout --relaxng ../rng/xmlcv.rng ./cv-en_example.xml\r\n```\r\n\r\nTransformation into XHTML:\r\n```\r\n$ saxon -o ./cv-en_example.html ./cv-en_example.xml ../xsl/xmlcv-xhtml.xsl\r\n```\r\n\r\nTransformation into TXT:\r\n```\r\n$ saxon -o ./cv-en_example.txt ./cv-en_example.xml ../xsl/xmlcv-txt.xsl\r\n```\r\n\r\nYou can also use XSLT Processor in your web browser. Just point your browser on `./cv-en_example.xml` file and it will show you XHTML page. Supported web browsers are Internet Explorer (version >= 7), Mozilla Firefox (version >= 2) and Opera (version >= 9.5).\r\n\r\nTransformation into PDF or RTF works in two steps. First step is to create XSL-FO file:\r\n```\r\n$ saxon -o ./cv-en_example.fo ./cv-en_example.xml ../xsl/xmlcv-fo.xsl\r\n```\r\n\r\nIf you want, you can even set some parameters:\r\n```\r\n$ saxon -o ./cv-en_example.fo ./cv-en_example.xml ../xsl/xmlcv-fo.xsl listitem_indent_width=39 show_footer=no current_year=$(date \"+%Y\")\r\n```\r\nThen you do not have to change the `Setting.xsl` file. Most useful params are is the following:\r\n * current_year\r\n * show_signature\r\n * show_footer (FO only)\r\n * css_path (XHTML only)\r\n * ck_not_used_color (FO only)\r\n * listitem_indent_width (FO only)\r\n * listitem_indent_distance (FO only)\r\n * listitem_indent_unit (FO only)\r\n * listitem_indent_separator_width (FO only)\r\n * end_of_line (TXT only)\r\n * line_length (TXT only)\r\n * title_bullet (TXT only)\r\n\r\nSecond step is to convert FO file into the desired output file:\r\n\r\nInto PDF:\r\n```\r\n$ fop -fo ./cv-en_example.fo -pdf cv-en_example.pdf\r\n```\r\n\r\nInto RTF (not fully supported):\r\n```\r\n$ fop -fo ./cv-en_example.fo -rtf cv-en_example.rtf\r\n```\r\n\r\n\r\n# Template tuning\r\n\r\nIf possible, do not tune `xmlcv-fo.xsl` file. If you feel like something could be done better, please let me know and I will try to add your requirements into the template.\r\n\r\nFor visual part of the template, there is a file `Setting.xsl`. This file contains many attributes which can be changed or even added by yourself. For XHTML output, you can tune `xmlcv.css` file.\r\n\r\n\r\n# Localization\r\n\r\nFeel free to change or add localization of this template. Take the file `Lang-en.xml` like a reference file. All other language files should contain the same number of text item definitions. If you add new localization, please send it to me and I will add it to this project.\r\n\r\n\r\n# Screenshots\r\n\r\n![HTML output](https://github.com/jtyr/xmlcv/raw/gh-pages/images/cv_html.jpg)\r\n![PDF output](https://github.com/jtyr/xmlcv/raw/gh-pages/images/cv_pdf.jpg)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}